name: Deploy to GitHub Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Setup Pages
        uses: actions/configure-pages@v5
        with:
          # Automatically inject router.base to Nuxt config
          static_site_generator: nuxt

      - name: Static HTML export with Nuxt
        run: npm run generate
        env:
          # Environment variables for Nuxt 4.x
          NITRO_PRESET: github-pages
          NODE_ENV: production
          # Add your environment variables here
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NUXT_PUBLIC_API_BASE: /api
          NUXT_PUBLIC_APP_NAME: InMyCity

      - name: Check output directory
        run: |
          if [ -d ".output/public" ]; then
            echo "OUTPUT_DIR=.output/public" >> $GITHUB_ENV
          elif [ -d "dist" ]; then
            echo "OUTPUT_DIR=dist" >> $GITHUB_ENV
          else
            echo "Error: No output directory found"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.OUTPUT_DIR }}

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
